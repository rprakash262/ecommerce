[{"/home/ravi/Coding/AffMark/client/src/index.js":"1","/home/ravi/Coding/AffMark/client/src/App.js":"2","/home/ravi/Coding/AffMark/client/src/reportWebVitals.js":"3","/home/ravi/Coding/AffMark/client/src/routes/index.js":"4","/home/ravi/Coding/AffMark/client/src/routes/homePage/index.js":"5","/home/ravi/Coding/AffMark/client/src/routes/oneProduct/index.js":"6","/home/ravi/Coding/AffMark/client/src/routes/homePage/HomePage.js":"7","/home/ravi/Coding/AffMark/client/src/routes/oneProduct/OneProduct.js":"8","/home/ravi/Coding/AffMark/client/src/components/banner/index.js":"9","/home/ravi/Coding/AffMark/client/src/components/banner/Banner.js":"10","/home/ravi/Coding/AffMark/client/src/components/navbar/index.js":"11","/home/ravi/Coding/AffMark/client/src/components/navbar/Navbar.js":"12","/home/ravi/Coding/AffMark/client/src/components/carousel/index.js":"13","/home/ravi/Coding/AffMark/client/src/components/carousel/Carousel.js":"14","/home/ravi/Coding/AffMark/client/src/components/footer/index.js":"15","/home/ravi/Coding/AffMark/client/src/components/footer/Footer.js":"16","/home/ravi/Coding/AffMark/client/src/routes/oneCategory/index.js":"17","/home/ravi/Coding/AffMark/client/src/routes/oneCategory/OneCategory.js":"18","/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/index.js":"19","/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/OneSubcategory.js":"20","/home/ravi/Coding/AffMark/client/src/store.js":"21","/home/ravi/Coding/AffMark/client/src/reducers/index.js":"22","/home/ravi/Coding/AffMark/client/src/reducers/HomePageReducer.js":"23","/home/ravi/Coding/AffMark/client/src/routes/admin/index.js":"24","/home/ravi/Coding/AffMark/client/src/routes/admin/Admin.js":"25","/home/ravi/Coding/AffMark/client/src/actions/index.js":"26","/home/ravi/Coding/AffMark/client/src/reducers/AdminReducer.js":"27","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewCategoryForm.js":"28","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewSubCategoryForm.js":"29","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewItemForm.js":"30","/home/ravi/Coding/AffMark/client/src/components/alertBar/index.js":"31","/home/ravi/Coding/AffMark/client/src/reducers/LayoutReducer.js":"32","/home/ravi/Coding/AffMark/client/src/firebase-config.js":"33","/home/ravi/Coding/AffMark/client/src/actions/adminActions.js":"34","/home/ravi/Coding/AffMark/client/src/actions/mainActions.js":"35","/home/ravi/Coding/AffMark/client/src/reducers/OneCategoryReducer.js":"36","/home/ravi/Coding/AffMark/client/src/reducers/OneSubCategoryReducer.js":"37","/home/ravi/Coding/AffMark/client/src/components/oneItem/index.js":"38","/home/ravi/Coding/AffMark/client/src/components/oneItem/OneItem.js":"39","/home/ravi/Coding/AffMark/client/src/components/editItemModal/index.js":"40","/home/ravi/Coding/AffMark/client/src/components/editItemModal/EditItemModal.js":"41","/home/ravi/Coding/AffMark/client/src/components/selectDropdown/index.js":"42","/home/ravi/Coding/AffMark/client/src/components/selectDropdown/SelectDropdown.js":"43"},{"size":618,"mtime":1609672750701,"results":"44","hashOfConfig":"45"},{"size":159,"mtime":1609569847923,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1609563332663,"results":"47","hashOfConfig":"45"},{"size":2901,"mtime":1611462537053,"results":"48","hashOfConfig":"45"},{"size":59,"mtime":1609569164723,"results":"49","hashOfConfig":"45"},{"size":66,"mtime":1609569416388,"results":"50","hashOfConfig":"45"},{"size":2284,"mtime":1611415297668,"results":"51","hashOfConfig":"45"},{"size":277,"mtime":1609569826510,"results":"52","hashOfConfig":"45"},{"size":54,"mtime":1609570336927,"results":"53","hashOfConfig":"45"},{"size":476,"mtime":1610795713483,"results":"54","hashOfConfig":"45"},{"size":54,"mtime":1609570451531,"results":"55","hashOfConfig":"45"},{"size":1333,"mtime":1611070592654,"results":"56","hashOfConfig":"45"},{"size":61,"mtime":1609574161915,"results":"57","hashOfConfig":"45"},{"size":1951,"mtime":1611244523865,"results":"58","hashOfConfig":"45"},{"size":54,"mtime":1609598966875,"results":"59","hashOfConfig":"45"},{"size":135,"mtime":1609599263061,"results":"60","hashOfConfig":"45"},{"size":69,"mtime":1609668655583,"results":"61","hashOfConfig":"45"},{"size":2252,"mtime":1611415314804,"results":"62","hashOfConfig":"45"},{"size":78,"mtime":1609669275274,"results":"63","hashOfConfig":"45"},{"size":1576,"mtime":1611415324864,"results":"64","hashOfConfig":"45"},{"size":297,"mtime":1610637400911,"results":"65","hashOfConfig":"45"},{"size":519,"mtime":1610787574925,"results":"66","hashOfConfig":"45"},{"size":1946,"mtime":1611108650691,"results":"67","hashOfConfig":"45"},{"size":52,"mtime":1609861774982,"results":"68","hashOfConfig":"45"},{"size":6135,"mtime":1611239920367,"results":"69","hashOfConfig":"45"},{"size":667,"mtime":1611383780003,"results":"70","hashOfConfig":"45"},{"size":14500,"mtime":1611414943316,"results":"71","hashOfConfig":"45"},{"size":1483,"mtime":1611198713554,"results":"72","hashOfConfig":"45"},{"size":2175,"mtime":1611239975455,"results":"73","hashOfConfig":"45"},{"size":4018,"mtime":1611413666646,"results":"74","hashOfConfig":"45"},{"size":788,"mtime":1610163154751,"results":"75","hashOfConfig":"45"},{"size":1643,"mtime":1611156363496,"results":"76","hashOfConfig":"45"},{"size":507,"mtime":1611414274405,"results":"77","hashOfConfig":"45"},{"size":1822,"mtime":1611383811806,"results":"78","hashOfConfig":"45"},{"size":981,"mtime":1611070868471,"results":"79","hashOfConfig":"45"},{"size":1544,"mtime":1611388463163,"results":"80","hashOfConfig":"45"},{"size":1554,"mtime":1611388729616,"results":"81","hashOfConfig":"45"},{"size":57,"mtime":1610789477151,"results":"82","hashOfConfig":"45"},{"size":1063,"mtime":1611415301980,"results":"83","hashOfConfig":"45"},{"size":75,"mtime":1611110082997,"results":"84","hashOfConfig":"45"},{"size":7629,"mtime":1611414633074,"results":"85","hashOfConfig":"45"},{"size":78,"mtime":1611281257208,"results":"86","hashOfConfig":"45"},{"size":1382,"mtime":1611374698259,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"v58jqy",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},"/home/ravi/Coding/AffMark/client/src/index.js",[],["180","181"],"/home/ravi/Coding/AffMark/client/src/App.js",[],"/home/ravi/Coding/AffMark/client/src/reportWebVitals.js",[],"/home/ravi/Coding/AffMark/client/src/routes/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/homePage/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneProduct/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/homePage/HomePage.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneProduct/OneProduct.js",[],"/home/ravi/Coding/AffMark/client/src/components/banner/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/banner/Banner.js",[],"/home/ravi/Coding/AffMark/client/src/components/navbar/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/navbar/Navbar.js",[],"/home/ravi/Coding/AffMark/client/src/components/carousel/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/carousel/Carousel.js",[],"/home/ravi/Coding/AffMark/client/src/components/footer/index.js",[],["182","183"],"/home/ravi/Coding/AffMark/client/src/components/footer/Footer.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneCategory/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneCategory/OneCategory.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/oneSubcategory/OneSubcategory.js",[],"/home/ravi/Coding/AffMark/client/src/store.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/index.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/HomePageReducer.js",[],"/home/ravi/Coding/AffMark/client/src/routes/admin/index.js",[],"/home/ravi/Coding/AffMark/client/src/routes/admin/Admin.js",[],"/home/ravi/Coding/AffMark/client/src/actions/index.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/AdminReducer.js",["184","185","186"],"import { cloneDeep } from 'lodash';\n\nimport { adminActions } from '../actions';\nimport { ACTIONS as layoutActions } from './LayoutReducer';\nimport { storage } from '../firebase-config';\n\nconst {\n  getCategories,\n  addNewCategory,\n  addNewSubCategory,\n  getSubCategories,\n  // getSubCategoriesByCategoryId,\n  fileUpload,\n  addNewItem,\n  postEditItem,\n  postDeleteItem,\n} = adminActions;\n\nconst SET_SECURITY_KEY = 'admin/SET_SECURITY_KEY';\nconst SET_LOGGED_IN = 'admin/SET_LOGGED_IN';\nconst SET_CATEGORY = 'admin/SET_CATEGORY';\nconst SET_SUB_CATEGORY = 'admin/SET_SUB_CATEGORY';\nconst SET_SELECTED_TAB = 'admin/SET_SELECTED_TAB';\nconst SET_ALL_CATEGORIES = 'admin/SET_ALL_CATEGORIES';\nconst SET_ALL_SUB_CATEGORIES = 'admin/SET_ALL_SUB_CATEGORIES';\nconst SET_SUB_CATEGORIES_FOR_CATEGORY = 'admin/SET_SUB_CATEGORIES_FOR_CATEGORY';\nconst SELECT_CATEGORY = 'admin/SELECT_CATEGORY';\nconst SELECT_SUB_CATEGORY = 'admin/SELECT_SUB_CATEGORY';\nconst SET_NEW_ITEM_FORM_DATA = 'admin/SET_NEW_ITEM_FORM_DATA';\nconst SET_IMAGE_FORM_DATA = 'admin/SET_IMAGE_DATA';\nconst SET_IMAGE_URL = 'admin/SET_IMAGE_URL';\nconst SET_UPLOADING_IMAGE = 'admin/SET_UPLOADING_IMAGE';\nconst SET_FILTERED_CATEGORIES = 'admin/SET_FILTERED_CATEGORIES';\nconst SET_FILTERED_SUB_CATEGORIES = 'admin/SET_FILTERED_SUB_CATEGORIES';\nconst SET_LOADING_EDIT_ITEM_MODAL = 'admin/SET_LOADING_EDIT_ITEM_MODAL';\nconst SET_EDITING_ITEM = 'admin/SET_EDITING_ITEM';\n\nconst changeSecurityKey = key => ({ type: SET_SECURITY_KEY, key });\nconst setLoggedIn = bool => ({ type: SET_LOGGED_IN, bool });\nconst setNewCategory = category => ({ type: SET_CATEGORY, category });\nconst setSelectedTab = selectedTab => ({ type: SET_SELECTED_TAB, selectedTab });\nconst setAllCategories = arr => ({ type: SET_ALL_CATEGORIES, arr });\nconst setAllSubCategories = arr => ({ type: SET_ALL_SUB_CATEGORIES, arr });\nconst setNewSubCategory = subCategory => ({ type: SET_SUB_CATEGORY, subCategory })\nconst selectCategoryInternal = catId => ({ type: SELECT_CATEGORY, catId });\nconst selectSubCategory = subCatId => ({ type: SELECT_SUB_CATEGORY, subCatId });\nconst setNewItemFormData = formData => ({ type: SET_NEW_ITEM_FORM_DATA, formData });\nconst setSubcategoriesForCategory = arr => ({ type: SET_SUB_CATEGORIES_FOR_CATEGORY, arr });\nconst setImageFormData = imageFormData => ({ type: SET_IMAGE_FORM_DATA, imageFormData });\nconst setImageUrl = imageUrl => ({ type: SET_IMAGE_URL, imageUrl });\nconst setUploadingImage = bool => ({ type: SET_UPLOADING_IMAGE, bool });\nconst setFilteredCategories = cat => ({ type: SET_FILTERED_CATEGORIES, cat });\nconst setFilteredSubCategories = cat => ({ type: SET_FILTERED_SUB_CATEGORIES, cat });\nconst loadEditItemModal = bool => ({ type: SET_LOADING_EDIT_ITEM_MODAL, bool });\nconst setEditingItem = item => ({ type: SET_EDITING_ITEM, item });\n\nconst defaultState = {\n  loadingEditItemModal: false,\n  loggedIn: false,\n  securityKey: '',\n  newCategory: '',\n  newSubCategory: '',\n  selectedCategoryId: '',\n  selectedTab: 'addNewCategory',\n  allCategories: [],\n  allSubCategories: [],\n  subcategoriesForCategory: [],\n  selectedSubCategoryId: '',\n  newItemFormData: {\n    isFeatured: false,\n  },\n  imageFormData: {},\n  imageUrl: '',\n  uploadingImage: false,\n  filteredCategories: [],\n  filteredSubCategories: [],\n  editingItem: {},\n};\n\nconst init = () => async dispatch => {\n  const loggedIn = await localStorage.getItem('loggedIn');\n\n  if (loggedIn) {\n    dispatch(setLoggedIn(true));\n  }\n\n  try {\n    const categories = await getCategories();\n    const subCategories = await getSubCategories();\n\n    dispatch(setAllCategories(categories));\n    dispatch(setAllSubCategories(subCategories));\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nconst changeNewCategory = txt => (dispatch, getState) => {\n  const { allCategories } = getState().admin;\n\n  dispatch(setNewCategory(txt));\n\n  const x = allCategories.filter(d => d.categoryName.toLowerCase().indexOf(txt.toLowerCase()) > -1);\n  dispatch(setFilteredCategories(x));\n}\n\nconst changeNewSubCategory = txt => (dispatch, getState) => {\n  const { allSubCategories } = getState().admin;\n\n  dispatch(setNewSubCategory(txt));\n\n  const x = allSubCategories.filter(d => d.subCategoryName.toLowerCase().indexOf(txt.toLowerCase()) > -1);\n  dispatch(setFilteredSubCategories(x));\n}\n\nconst submitSecurityKey = () => async (dispatch, getState) => {\n  const { securityKey } = getState().admin;\n\n  if (securityKey === 'secret') {\n    await localStorage.setItem('loggedIn', true);\n    dispatch(setLoggedIn(true));\n  }\n}\n\nconst selectCategory = catId => async (dispatch, getState) => {\n  dispatch(selectCategoryInternal(catId))\n\n  try {\n    const { allSubCategories } = getState().admin;\n\n    const subcategoriesForCategory = allSubCategories.filter(subCat => subCat.categoryId === catId);\n\n    dispatch(setSubcategoriesForCategory(subcategoriesForCategory));\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nconst submitNewCategory = () => async (dispatch, getState) => {\n  const { newCategory } = getState().admin;\n\n  if (!newCategory) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'Enter category name!'));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'Enter category name!'));\n    }, 4000);\n  }\n\n  try {\n    const response = await addNewCategory(newCategory);\n\n    if (!response.success) {\n      dispatch(layoutActions.setAlert(true, 'danger', response.result));\n\n      return setTimeout(() => {\n        return dispatch(layoutActions.setAlert(false, 'danger', response.result));\n      }, 4000);\n    }\n\n    const { result } = response;\n    const { categoryName: catName } = result;\n\n    dispatch(changeNewCategory(''));\n    dispatch(layoutActions.setAlert(true, 'success', `Category \"${catName}\" added successfully!`));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'success', `Category \"${catName}\" added successfully!`));\n    }, 4000);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nconst submitNewSubCategory = () => async (dispatch, getState) => {\n  const { newSubCategory, selectedCategoryId } = getState().admin;\n\n  if (!selectedCategoryId) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'Please select a category!'));\n\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'Please select a category!'));\n    }, 4000);\n  }\n\n  if (!newSubCategory) {\n    dispatch(layoutActions.setAlert(true, 'danger', 'Please enter sub-category name!'));\n    return setTimeout(() => {\n      return dispatch(layoutActions.setAlert(false, 'danger', 'Please enter sub-category name!'));\n    }, 4000);\n  }\n\n  try {\n    const response = await addNewSubCategory(selectedCategoryId, newSubCategory);\n\n    if (!response.success) {\n      dispatch(layoutActions.setAlert(true, 'danger', response.result));\n\n      return setTimeout(() => {\n        return dispatch(layoutActions.setAlert(false, 'danger', response.result));\n      }, 4000);\n    }\n\n    const { result } = response;\n    const { subCategoryName: subCatName } = result;\n\n    dispatch(changeNewSubCategory(''));\n    dispatch(layoutActions.setAlert(true, 'success', `Sub-Category \"${subCatName}\" added successfully!`));\n\n    setTimeout(() => {\n      dispatch(layoutActions.setAlert(false, 'success', `Sub-Category \"${subCatName}\" added successfully!`));\n    }, 4000);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nconst changeNewItemFormData = (type, value) => (dispatch, getState) => {\n  const { newItemFormData } = getState().admin;\n\n  const clonedFormData = cloneDeep(newItemFormData);\n\n  clonedFormData[type] = value;\n\n  dispatch(setNewItemFormData(clonedFormData));\n}\n\nconst changeItemImage = (e) => async (dispatch, getState) => {\n  // const imageFormObj = new FormData();\n\n  const img = e.target.files[0];\n\n  // imageFormObj.append('imageName', `multer-image-${Date.now()}`);\n  // imageFormObj.append('imageData', e.target.files[0]);\n\n  // dispatch(setImageFormData(imageFormObj));\n  dispatch(setImageFormData(img));\n}\n\nconst uploadItemImage = () => async (dispatch, getState) => {\n  dispatch(setUploadingImage(true));\n  const { imageFormData } = getState().admin;\n\n  // try {\n  //   const response = await fileUpload(imageFormData);\n\n  //   const { result } = response;\n  //   const { imageData } = result;\n\n  //   dispatch(setImageUrl(imageData))\n  //   dispatch(setUploadingImage(false));\n  // } catch (err) {\n  //   console.error(err);\n  //   dispatch(setUploadingImage(false));\n  // }\n  const uploadTask = storage.ref(`images/${imageFormData.name}`).put(imageFormData);\n\n  uploadTask.on(\"state_changed\", snapshot => {}, error => console.log(error), () => {\n    storage\n      .ref(\"images\")\n      .child(imageFormData.name)\n      .getDownloadURL()\n      .then(url => {\n        dispatch(setImageUrl(url))\n        dispatch(setUploadingImage(false));\n      })\n  })\n}\n\nconst submitNewItem = () => async (dispatch, getState) => {\n  const {\n    newItemFormData,\n    imageUrl,\n    selectedCategoryId,\n    selectedSubCategoryId,\n  } = getState().admin;\n\n  newItemFormData['categoryId'] = selectedCategoryId;\n  newItemFormData['subCategoryId'] = selectedSubCategoryId;\n  newItemFormData['itemImage'] = imageUrl;\n\n  try {\n    const response = await addNewItem(newItemFormData);\n\n    if (!response.success) {\n      dispatch(layoutActions.setAlert(true, 'danger', 'Something went wrong!'));\n\n      return setTimeout(() => {\n        return dispatch(layoutActions.setAlert(false, 'danger', 'Something went wrong!'));\n      }, 4000);\n    }\n\n    dispatch(selectCategoryInternal(''));\n    dispatch(selectSubCategory(''));\n    dispatch(setImageFormData({}));\n    dispatch(setImageUrl(''))\n    dispatch(setNewItemFormData({ isFeatured: false }))\n    dispatch(layoutActions.setAlert(true, 'success', 'Item added successfully!'));\n\n    setTimeout(() => {\n      dispatch(layoutActions.setAlert(false, 'success', 'Item added successfully!'));\n    }, 4000);\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nconst editItem = item => async (dispatch, getState) => {\n  dispatch(loadEditItemModal(true));\n  dispatch(setEditingItem(item));\n  dispatch(layoutActions.showEditItemModal(true));\n\n  try {\n    const categories = await getCategories();\n    const subCategories = await getSubCategories();\n\n    dispatch(setAllCategories(categories));\n    dispatch(setAllSubCategories(subCategories));\n  } catch (err) {\n    console.error(err);\n  }\n\n  let newItemFormData = {};\n\n  const {\n    categoryId,\n    subCategoryId,\n    itemName,\n    itemPrice,\n    itemDescription,\n    offer,\n    isFeatured,\n    buyLink,\n  } = item;\n\n  newItemFormData['itemName'] = itemName;\n  newItemFormData['itemPrice'] = itemPrice;\n  newItemFormData['itemDescription'] = itemDescription;\n  newItemFormData['offer'] = offer;\n  newItemFormData['isFeatured'] = isFeatured;\n  newItemFormData['buyLink'] = buyLink;\n\n  dispatch(selectCategory(categoryId));\n  dispatch(selectSubCategory(subCategoryId));\n  dispatch(setNewItemFormData(newItemFormData));\n\n  console.log({item})\n  dispatch(loadEditItemModal(false));\n}\n\nconst submitEditNewItem = () => async (dispatch, getState) => {\n  const {\n    editingItem,\n    newItemFormData,\n    selectedCategoryId,\n    selectedSubCategoryId,\n    imageUrl,\n  } = getState().admin;\n\n  const { id, itemImage } = editingItem;\n\n  newItemFormData['categoryId'] = selectedCategoryId;\n  newItemFormData['subCategoryId'] = selectedSubCategoryId;\n  newItemFormData['itemImage'] = imageUrl || itemImage;\n\n  try {\n    const response = await postEditItem(id, newItemFormData);\n\n    window.location.reload();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst deleteItem = item => async (dispatch) => {\n  const { id } = item;\n\n  try {\n    const response = await postDeleteItem(id);\n\n    window.location.reload();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const ACTIONS = {\n  init,\n  changeNewCategory,\n  setSelectedTab,\n  submitNewCategory,\n  submitNewSubCategory,\n  changeNewSubCategory,\n  selectCategory,\n  selectSubCategory,\n  changeNewItemFormData,\n  changeItemImage,\n  uploadItemImage,\n  submitNewItem,\n  changeSecurityKey,\n  submitSecurityKey,\n  editItem,\n  submitEditNewItem,\n  deleteItem,\n};\n\nfunction AdminReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return Object.assign({}, state, {\n        newCategory: action.category,\n      });\n    case SET_SUB_CATEGORY:\n      return Object.assign({}, state, {\n        newSubCategory: action.subCategory,\n      });\n    case SET_SELECTED_TAB:\n      return Object.assign({}, state, {\n        selectedTab: action.selectedTab,\n      });\n    case SET_ALL_CATEGORIES:\n      return Object.assign({}, state, {\n        allCategories: action.arr,\n        filteredCategories: action.arr,\n      });\n    case SET_ALL_SUB_CATEGORIES:\n      return Object.assign({}, state, {\n        allSubCategories: action.arr,\n      });\n    case SET_SUB_CATEGORIES_FOR_CATEGORY:\n      return Object.assign({}, state, {\n        subcategoriesForCategory: action.arr,\n      });\n    case SELECT_CATEGORY:\n      return Object.assign({}, state, {\n        selectedCategoryId: action.catId,\n      });\n    case SELECT_SUB_CATEGORY:\n      return Object.assign({}, state, {\n        selectedSubCategoryId: action.subCatId,\n      });\n    case SET_NEW_ITEM_FORM_DATA:\n      return Object.assign({}, state, {\n        newItemFormData: action.formData,\n      });\n    case SET_IMAGE_FORM_DATA:\n      return Object.assign({}, state, {\n        imageFormData: action.imageFormData,\n      });\n    case SET_IMAGE_URL:\n      return Object.assign({}, state, {\n        imageUrl: action.imageUrl,\n      });\n    case SET_UPLOADING_IMAGE:\n      return Object.assign({}, state, {\n        uploadingImage: action.bool,\n      });\n    case SET_SECURITY_KEY:\n      return Object.assign({}, state, {\n        securityKey: action.key,\n      });\n    case SET_LOGGED_IN:\n      return Object.assign({}, state, {\n        loggedIn: action.bool,\n      });\n    case SET_FILTERED_CATEGORIES:\n      return Object.assign({}, state, {\n        filteredCategories: action.cat,\n      });\n    case SET_FILTERED_SUB_CATEGORIES:\n      return Object.assign({}, state, {\n        filteredSubCategories: action.cat,\n      });\n    case SET_LOADING_EDIT_ITEM_MODAL:\n      return Object.assign({}, state, {\n        loadingEditItemModal: action.bool,\n      });\n    case SET_EDITING_ITEM:\n      return Object.assign({}, state, {\n        editingItem: action.item,\n      });\n    default:\n      return state;\n  }\n}\n\nexport default AdminReducer;","/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewCategoryForm.js",[],"/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewSubCategoryForm.js",[],"/home/ravi/Coding/AffMark/client/src/routes/admin/AddNewItemForm.js",["187","188"],"import BackupIcon from '@material-ui/icons/Backup';\nimport DoneIcon from '@material-ui/icons/Done';\n// import HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport TimerOutlinedIcon from '@material-ui/icons/TimerOutlined';\n\nconst AddNewItem = ({\n  selectCategory,\n  allCategories = [],\n  selectedCategoryId,\n  selectSubCategory,\n  allSubCategories = [],\n  subcategoriesForCategory = [],\n  selectedSubCategoryId,\n  changeNewItemFormData,\n  newItemFormData,\n  changeItemImage,\n  uploadItemImage,\n  submitNewItem,\n  imageUrl,\n  uploadingImage,\n}) => (\n  <div className=\"admin-add-new-item\">\n    <div className=\"admin-one-form-item\">\n      <select\n        defaultValue=\"\"\n        onChange={e => selectCategory(e.target.value)}\n      >\n        <option value=\"\">Select Category</option>\n        {allCategories.map(category => (\n          <option\n            key={category.id}\n            selected={selectedCategoryId === category.id}\n            value={category.id}\n          >\n            {category.categoryName}\n          </option>\n        ))}\n      </select>\n    </div>\n    <div className=\"admin-one-form-item\">\n      <select\n        defaultValue=\"\"\n        onChange={e => selectSubCategory(e.target.value)}\n      >\n        <option value=\"\">Select Sub-Category</option>\n        {subcategoriesForCategory.map(subCategory => (\n          <option\n            key={subCategory.id}\n            selected={selectedSubCategoryId === subCategory.id}\n            value={subCategory.id}\n          >\n            {subCategory.subCategoryName}\n          </option>\n        ))}\n      </select>\n    </div>\n    <div className=\"admin-one-form-item\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter item name\"\n        onChange={e => changeNewItemFormData('itemName', e.target.value)}\n        value={newItemFormData.itemName}\n      />\n    </div>\n    <div className=\"admin-one-form-item\">\n      <textarea\n        type=\"text\"\n        placeholder=\"Enter item description\"\n        onChange={e => changeNewItemFormData('itemDescription', e.target.value)}\n        value={newItemFormData.itemDescription}\n      />\n    </div>\n    <div className=\"admin-one-form-item file\">\n      <input\n        type=\"file\"\n        onChange={e => changeItemImage(e)}\n      />\n      {uploadingImage && <TimerOutlinedIcon style={{ color: \"#ed143d\", marginLeft: '10px' }} />}\n      {imageUrl && !uploadingImage && <DoneIcon style={{ color: 'green', marginLeft: '10px' }} /> }\n      {!imageUrl && !uploadingImage && (\n        <button onClick={() => uploadItemImage()}>\n          <BackupIcon />\n        </button>\n      )}\n    </div>\n    <div className=\"admin-one-form-item\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter item price\"\n        onChange={e => changeNewItemFormData('itemPrice', e.target.value)}\n        value={newItemFormData.itemPrice}\n      />\n    </div>\n    <div className=\"admin-one-form-item\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter item offer\"\n        onChange={e => changeNewItemFormData('offer', e.target.value)}\n        value={newItemFormData.offer}\n      />\n    </div>\n    <div className=\"admin-one-form-item\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter item buying link\"\n        onChange={e => changeNewItemFormData('buyLink', e.target.value)}\n        value={newItemFormData.buyLink}\n      />\n    </div>\n    <div className=\"admin-one-form-item\">\n      <label htmlFor=\"check-box\" className=\"checkbox\">\n        <input\n          id=\"check-box\"\n          type=\"checkbox\"\n          checked={newItemFormData.isFeatured}\n          value={newItemFormData.isFeatured}\n          onChange={e => changeNewItemFormData('isFeatured', !newItemFormData.isFeatured)}\n        /> Check if featured item\n      </label>\n    </div>\n    <div className=\"admin-one-form-item\">\n      <button onClick={submitNewItem}>Submit</button>\n    </div>\n  </div>\n)\n\nexport default AddNewItem;\n","/home/ravi/Coding/AffMark/client/src/components/alertBar/index.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/LayoutReducer.js",[],"/home/ravi/Coding/AffMark/client/src/firebase-config.js",[],"/home/ravi/Coding/AffMark/client/src/actions/adminActions.js",[],"/home/ravi/Coding/AffMark/client/src/actions/mainActions.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/OneCategoryReducer.js",[],"/home/ravi/Coding/AffMark/client/src/reducers/OneSubCategoryReducer.js",[],"/home/ravi/Coding/AffMark/client/src/components/oneItem/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/oneItem/OneItem.js",["189"],"import EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport './OneItem.css';\n\nfunction OneItem({ item, loggedIn, editItem, deleteItem }) {\n  return (\n    <div className=\"home-page-one-item\">\n      {loggedIn && (\n        <div className=\"loggedin-btn\" onClick={() => editItem(item)}>\n          <EditIcon style={{ color: '#fff' }} /> \n        </div>\n      )}\n      {loggedIn && (\n        <div className=\"delete-btn\" onClick={() => deleteItem(item)}>\n          <DeleteIcon style={{ color: '#fff' }} />\n        </div>\n      )}\n      <div className=\"home-page-one-item-img\">\n        <img alt=\"item-img\" src={item.itemImage} />\n      </div>\n      <div className=\"home-page-one-item-desc\">\n        <h4>{item.itemName}</h4>\n        {/* <p>{item.itemDescription.slice()}</p> */}\n        <p>Rs. {item.itemPrice} /-</p>\n        <p>Offer - {item.offer || 'NA'}</p>\n        <button>\n          <a href={item.buyLink} target=\"_blank\">View / Buy Product</a>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default OneItem;\n","/home/ravi/Coding/AffMark/client/src/components/editItemModal/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/editItemModal/EditItemModal.js",[],"/home/ravi/Coding/AffMark/client/src/components/selectDropdown/index.js",[],"/home/ravi/Coding/AffMark/client/src/components/selectDropdown/SelectDropdown.js",["190"],"import React, { Component } from 'react';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nimport './SelectDropdown.css';\n\nclass SelectDropdown extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showDropdown: false,\n    }\n  }\n\n  showDropdownList = () => {\n    this.setState(state => ({\n      showDropdown: state.showDropdown ? false : true,\n    }))\n  }\n\n  hideDropdownList = () => {\n    this.setState({\n      showDropdown: false,\n    })\n  }\n\n  selectItemHandler = id => {\n    this.setState({\n      showDropdown: false,\n    }, () => {\n      this.props.selectItem(id);\n    })\n  }\n\n  render() {\n    const { dropdownList, selectedItem, selectItem } = this.props\n    const { showDropdown } = this.state;\n\n    return (\n        <div className=\"select-dropdown\">\n          <div\n            className=\"select-dropdown-selected-item\"\n            onClick={this.showDropdownList}\n            onBlur={this.hideDropdownList}\n          >\n            <span>{selectedItem}</span>\n            <KeyboardArrowDownIcon />\n          </div>\n          {showDropdown && (\n            <div className=\"select-dropdown-list\">\n              {dropdownList.map(d => (\n                  <div onClick={() => this.selectItemHandler(d.id)}>{d.value}</div>\n              ))}\n            </div>\n          )}\n        </div>\n    );\n  }\n}\n\nexport default SelectDropdown;\n",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"191","replacedBy":"195"},{"ruleId":"193","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":13,"column":3,"nodeType":"199","messageId":"200","endLine":13,"endColumn":13},{"ruleId":"197","severity":1,"message":"201","line":367,"column":11,"nodeType":"199","messageId":"200","endLine":367,"endColumn":19},{"ruleId":"197","severity":1,"message":"201","line":379,"column":11,"nodeType":"199","messageId":"200","endLine":379,"endColumn":19},{"ruleId":"197","severity":1,"message":"202","line":4,"column":8,"nodeType":"199","messageId":"200","endLine":4,"endColumn":26},{"ruleId":"197","severity":1,"message":"203","line":5,"column":8,"nodeType":"199","messageId":"200","endLine":5,"endColumn":17},{"ruleId":"204","severity":1,"message":"205","line":28,"column":11,"nodeType":"206","endLine":28,"endColumn":50},{"ruleId":"197","severity":1,"message":"207","line":35,"column":41,"nodeType":"199","messageId":"200","endLine":35,"endColumn":51},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],["208"],["209"],"no-unused-vars","'fileUpload' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'HourglassEmptyIcon' is defined but never used.","'TimerIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'selectItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]